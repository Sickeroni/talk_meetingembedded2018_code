
# EXECUTABLE EXTENSION
SET (CMAKE_EXECUTABLE_SUFFIX ".elf")

# CMAKE_BUILD_TYPE
IF(NOT CMAKE_BUILD_TYPE MATCHES Debug)
    SET (CMAKE_BUILD_TYPE Debug)
ENDIF()

# TOOLCHAIN_DIR AND NANO LIBRARY

# TARGET_TRIPLET
SET(TARGET_TRIPLET "arm-none-eabi-")
SET(TOOLCHAIN_BIN_DIR "/usr/bin")
SET(TOOLCHAIN_INC_DIR "/usr/arm-linux-gnueabi/lib")
SET(TOOLCHAIN_LIB_DIR "/usr/arm-linux-gnueabi/include")

# something for windows
#SET(TARGET_TRIPLET "arm-none-eabi-")
#SET(EXE_FILEENDING ".exe")
#SET(TOOLCHAIN_BIN_DIR "C:/Program Files (x86)/GNU Tools ARM Embedded/6 2017-q2-update/bin")
#SET(TOOLCHAIN_INC_DIR "C:/Program Files (x86)/GNU Tools ARM Embedded/6 2017-q2-update/lib")
#SET(TOOLCHAIN_LIB_DIR "C:/Program Files (x86)/GNU Tools ARM Embedded/6 2017-q2-update/include")

SET(CMAKE_SYSTEM_NAME "Generic")
SET(CMAKE_SYSTEM_PROCESSOR arm)
SET(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)

#SET(CMAKE_SYSTEM_NAME None)

SET(CMAKE_ASM_COMPILER  "${TOOLCHAIN_BIN_DIR}/${TARGET_TRIPLET}gcc${EXE_FILEENDING}"       CACHE INTERNAL "")
SET(CMAKE_C_COMPILER    "${TOOLCHAIN_BIN_DIR}/${TARGET_TRIPLET}gcc${EXE_FILEENDING}"       CACHE INTERNAL "")
SET(CMAKE_CXX_COMPILER  "${TOOLCHAIN_BIN_DIR}/${TARGET_TRIPLET}g++${EXE_FILEENDING}"       CACHE INTERNAL "")
SET(CMAKE_AR            "${TOOLCHAIN_BIN_DIR}/${TARGET_TRIPLET}ar${EXE_FILEENDING}"        CACHE INTERNAL "")
SET(CMAKE_RANLIB        "${TOOLCHAIN_BIN_DIR}/${TARGET_TRIPLET}ranlib${EXE_FILEENDING}"    CACHE INTERNAL "")

SET(CMAKE_C_COMPILER_TARGET ${TARGET_TRIPLET})
SET(CMAKE_CXX_COMPILER_TARGET ${TARGET_TRIPLET})

SET(CMAKE_OBJCOPY ${TARGET_TRIPLET}-objcopy CACHE INTERNAL "objcopy tool")
SET(CMAKE_OBJDUMP ${TARGET_TRIPLET}-objdump CACHE INTERNAL "objdump tool")

SET(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} " CACHE INTERNAL "c compiler flags debug")
SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} " CACHE INTERNAL "cxx compiler flags debug")
SET(CMAKE_ASM_FLAGS_DEBUG "${CMAKE_ASM_FLAGS_DEBUG} " CACHE INTERNAL "asm compiler flags debug")
SET(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} " CACHE INTERNAL "linker flags debug")

SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} " CACHE INTERNAL "c compiler flags release")
SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} " CACHE INTERNAL "cxx compiler flags release")
SET(CMAKE_ASM_FLAGS_RELEASE "${CMAKE_ASM_FLAGS_RELEASE} " CACHE INTERNAL "asm compiler flags release")
SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELESE} " CACHE INTERNAL "linker flags release")

SET(CMAKE_FIND_ROOT_PATH ${TOOLCHAIN_DIR}/${TARGET_TRIPLET} ${EXTRA_FIND_PATH})
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)



MESSAGE(STATUS "BUILD_TYPE: " ${CMAKE_BUILD_TYPE})